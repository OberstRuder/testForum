@using System.Security.Claims
@model PaginatedList<TestForum.Models.Theme>

@{
    ViewData["Title"] = "Index";
}

<h1>Forum</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@foreach (var item in Model) {
    <h4>@item.Title</h4>
    <p>@item.Description | Total posts: @item.Posts.Count | Created by: @item.User.Email</p>    
    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
    @if (User.IsInRole("Admin") || (User.Identity.IsAuthenticated && item.User.Id == User.FindFirstValue(ClaimTypes.NameIdentifier)))
    {
        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    }
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
    }
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="d-flex justify-content-center align-items-end mb-4">
    <a asp-action="index" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default @prevDisabled"><<</a>
    <div class="btn" style="cursor: default">
        Page @Model.PageIndex of @(Model.TotalPages == 0 ? 1 : Model.TotalPages)
    </div>
    <a asp-action="index" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-default @nextDisabled">>></a>
</div>
